name: Shootout
on:  
  schedule:
    - cron:  '0 0 1 * *'
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      iterations:
        description: 'Iterations'
        required: true
        default: 5
      test_period:
        description: 'Test Period'
        required: false
        default: 0.2
      warmup_period:
        description: 'Warmup Period'
        required: false
        default: 0.2
      job_count:
        description: 'Job Count'
        required: false
        default: 1000
      synchronous_commit:
        description: 'Synchronous Commit'
        required: false
        default: 'on'

jobs:
  shootout:
    name: Shootout
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PGHOST: localhost
      PGUSER: shootout
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      # Shootout ENV
      ITERATIONS: ${{ github.event.inputs.iterations || 5 }}
      TEST_PERIOD: ${{ github.event.inputs.test_period || 0.2 }}
      WARMUP_PERIOD: ${{ github.event.inputs.warmup_period || 0.2 }}
      JOB_COUNT: ${{ github.event.inputs.job_count || 1000 }}
      SYNCHRONOUS_COMMIT: ${{ github.event.inputs.synchronous_commit || 'on' }}
    services:
      postgres:
        image: postgres:latest
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: shootout
          POSTGRES_DB: shootout
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports: ["6379:6379"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
#      - name: Bundle update to the latest
#        run: bundle config unset deployment && bundle update

      # Test
      - name: Run shootout
        run: |
          mkdir -p results/
          
          echo "# Shootout run #${GITHUB_RUN_NUMBER}" > results/run_${GITHUB_RUN_NUMBER}.md

          echo "## Results" >> results/run_${GITHUB_RUN_NUMBER}.md
          echo "\`\`\`" >> results/run_${GITHUB_RUN_NUMBER}.md
          bundle exec rake >> results/run_${GITHUB_RUN_NUMBER}.md
          echo "\`\`\`" >> results/run_${GITHUB_RUN_NUMBER}.md


          echo "## Env & Run details" >> results/run_${GITHUB_RUN_NUMBER}.md
          echo "Env vars were: ITERATIONS = \`${ITERATIONS}\`, TEST_PERIOD = \`${TEST_PERIOD}\`, WARMUP_PERIOD = \`${WARMUP_PERIOD}\`, JOB_COUNT = \`${JOB_COUNT}\`, SYNCHRONOUS_COMMIT = \`${SYNCHRONOUS_COMMIT}\`" >> results/run_${GITHUB_RUN_NUMBER}.md

          echo "\n" >> results/run_${GITHUB_RUN_NUMBER}.md
          echo "Postgres version: \`$(psql --version)\`" >> results/run_${GITHUB_RUN_NUMBER}.md
          echo "Ruby version: \`$(ruby -v)\`" >> results/run_${GITHUB_RUN_NUMBER}.md

          echo "Gem versions:" >> results/run_${GITHUB_RUN_NUMBER}.md
          echo "\`\`\`" >> results/run_${GITHUB_RUN_NUMBER}.md
          bundle >> results/run_${GITHUB_RUN_NUMBER}.md
          echo "\`\`\`" >> results/run_${GITHUB_RUN_NUMBER}.md
        env:
          DATABASE_URL: postgres://shootout@localhost:${{ job.services.postgres.ports[5432] }}
          REDIS_URL: redis://localhost:${{ job.services.redis.ports[6379] }}
      - name: Commit, and push shootout results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add results/*.md
          git commit -m "Updated data in run ${GITHUB_RUN_NUMBER}"
          git push
